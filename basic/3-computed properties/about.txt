Computed properties are used to "return and show values".  

They are often used rather than having complex expressions in our tags and directives.

They are also called "computed values".

The are defined like functions but are used and behave like properties.

Like properties, their values are cached.  Each use of the computed property references the same cached value.  If you have a computational expensive computed property, you can use it multilpe times and it will only be computed once.  It doesn't need to be recomputed for each use.

They are used in html like properties (i.e. without the () required to call a function).

They update automatically when any of the values they depend upon change.  This makes them different than functions, which need to be called to update the value they return OR are called when rerendering the section where they are used.  

The fact that computed properties update automatically makes them like properties.  As a result, like properties, computed properties are used for data binding.  

It is best practice not to modify properties in our computed property definitions.

You should think of computed properties as an extension of your data model.

